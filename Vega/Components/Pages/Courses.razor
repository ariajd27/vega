@page "/courses/{QuerySubject}"
@attribute [StreamRendering]

<PageTitle>Courses</PageTitle>

<h1>Courses</h1>

<p>Here is a list of all @QuerySubject courses:</p>

@if (courses == null)
{
    <p><em>@statusMsg</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Number</th>
                <th>Title</th>
                <th>Typically offered</th>
                <th>Internal ID</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in courses)
            {
                <tr>
                    <td>@QuerySubject @course.CatalogNumber</td>
                    <td>@course.Title</td>
                    <td>@course.DescribeTypicalTerms()</td>
                    <td>@course.InternalId</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [Parameter]
    public string? QuerySubject { get; set; }

    private string statusMsg = "Loading...";
    private Course[]? courses;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadDataAsync();
            StateHasChanged();
        }
    }

    private async Task LoadDataAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<Subject[]>($"subjects");
        var subjects = result.Success ? result.Value : await Subject.GetAllSubjectsAsync();
        Subject subject = subjects.First(x => x.Name == QuerySubject);
        if (subject.Polled)
        {
            courses = subject.Courses;
        }
        else
        {
            await subject.GetCourses();
            courses = subject.Courses;
        }

        await ProtectedSessionStore.SetAsync("subjects", subjects);
    }
}